services:
  api:
    build: .
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      db:
        condition: service_started
      mongo: 
        condition: service_healthy

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./Infrastructure/Data/dbCreation.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./Infrastructure/Data/triggers.sql:/docker-entrypoint-initdb.d/02-triggers.sql
    environment:
      - POSTGRES_USER=caballosacerouser
      - POSTGRES_PASSWORD=1020
      - POSTGRES_DB=caballos_acero_db
    ports:
      - "5432:5432"
    restart: unless-stopped
    
  mongo:
    image: mongo
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=MongoRootPass123
    ports:
      - "27017:27017"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mongosh", "--username", "root", "--password", "MongoRootPass123", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: {}
  mongo_data: {}